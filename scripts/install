#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

# Set upload limits for PHP for potential web-based imports
ynh_app_setting_set --app=$app --key=php_upload_max_filesize --value=50M
ynh_app_setting_set --app=$app --key=php_post_max_size --value=50M

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Installing Wakapi..." --weight=10

# Create the destination directory
mkdir -p "$install_dir"

# Download and install Wakapi
ynh_exec_warn_less ynh_exec_as $app curl -L https://wakapi.dev/get | bash

# Move the installed files to the install directory
mv $HOME/.wakapi/* "$install_dir/"

# Set appropriate permissions
chown -R "$app:www-data" "$install_dir"

#=================================================
# CONFIGURE WAKAPI
#=================================================
ynh_script_progression --message="Configuring Wakapi..." --weight=5

# Create the config.yml file
cat > "$install_dir/config.yml" << EOF
env: production
quick_start: false
skip_migrations: false
enable_pprof: false

server:
  listen_ipv4: 127.0.0.1
  listen_ipv6: ::1
  listen_socket:
  listen_socket_mode: 0666
  timeout_sec: 30
  tls_cert_path:
  tls_key_path:
  port: $port
  base_path: $path
  public_url: https://$domain$path

app:
  leaderboard_enabled: true
  leaderboard_scope: 7_days
  leaderboard_generation_time: '0 0 6 * * *,0 0 18 * * *'
  leaderboard_require_auth: false
  aggregation_time: '0 15 2 * * *'
  report_time_weekly: '0 0 18 * * 5'
  data_cleanup_time: '0 0 6 * * 0'
  inactive_days: 7
  import_enabled: true
  import_backoff_min: 5
  import_max_rate: 24
  import_batch_size: 50
  heartbeat_max_age: '4320h'
  data_retention_months: -1
  max_inactive_months: 12
  warm_caches: true
  custom_languages:
    vue: Vue
    jsx: JSX
    tsx: TSX
    cjs: JavaScript
    ipynb: Python
    svelte: Svelte
    astro: Astro
  avatar_url_template: api/avatar/{username_hash}.svg
  date_format: Mon, 02 Jan 2006
  datetime_format: Mon, 02 Jan 2006 15:04

db:
  host:
  port:
  socket:
  user:
  password:
  name: $install_dir/wakapi_db.db
  dialect: sqlite3
  charset: utf8mb4
  max_conn: 10
  ssl: false
  automigrate_fail_silently: false

security:
  password_salt: $(ynh_string_random --length=32)
  insecure_cookies: false
  cookie_max_age: 172800
  allow_signup: $signup_allowed
  signup_captcha: false
  invite_codes: true
  disable_frontpage: false
  expose_metrics: false
  enable_proxy: false
  trusted_header_auth: false
  trusted_header_auth_key: Remote-User
  trust_reverse_proxy_ips:
  signup_max_rate: 5/1h
  login_max_rate: 10/1m
  password_reset_max_rate: 5/1h

sentry:
  dsn:
  enable_tracing: false
  sample_rate: 0.75
  sample_rate_heartbeats: 0.1

subscriptions:
  enabled: false
  expiry_notifications: true
  stripe_api_key:
  stripe_secret_key:
  stripe_endpoint_secret:
  standard_price_id:

mail:
  enabled: $with_mail
  provider: smtp
  sender: Wakapi <$admin_email>

  smtp:
    host: localhost
    port: 25
    username:
    password:
    tls: false
EOF

# Ensure config file has appropriate permissions
chmod 400 "$install_dir/config.yml"
chown "$app:$app" "$install_dir/config.yml"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=3

# Create a dedicated NGINX config
ynh_config_add_nginx

# Create a dedicated systemd config
cat > /etc/systemd/system/$app.service << EOF
[Unit]
Description=Wakapi - Self-hosted WakaTime compatible API
After=network.target

[Service]
Type=simple
User=$app
Group=$app
WorkingDirectory=$install_dir
ExecStart=$install_dir/wakapi
Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload

# Integrate service in YunoHost
yunohost service add "$app" --description="Self-hosted WakaTime compatible time tracking API" --log="/var/log/$app/$app.log"

# Configure logrotate
ynh_config_add_logrotate

#=================================================
# CREATE ADMIN USER
#=================================================
ynh_script_progression --message="Creating admin user..." --weight=2

# Wait for service to be up and running
ynh_systemctl start $app
sleep 5

# Create admin user (using curl)
ynh_local_curl "${domain}${path}/api/signup" \
  -H "Content-Type: application/json" \
  -d "{\"username\":\"$admin\",\"email\":\"$admin_email\",\"password\":\"$password\"}"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting $app's service..." --weight=1

# Start a systemd service
ynh_systemctl start "$app"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last